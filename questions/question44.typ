= Связка маршрутов, операции для связок маршрутов, матрица соединений. Алгоритм для нахождения всех гамильтоновых путей в орграфе.

*Связкой маршрутов* называется множество маршрутов, имеющих одну и ту же начальную вершину и одну и ту же конечную вершину. Обозначим как $B(u, v)$, где $u$ --- начало маршрутов, $v$ --- конец маршрутов.

*Объединением связок* называется операция $B_i (u, v) union B_j (u, v)$, то есть может применяться только к связкам с одинаковым началом и концом.

*Композицией связок* $B_i (u, v)$ и $B_j (v, w)$ называется связка $B(u, w) = B_i  (u, v) dot B_j (v, w) = {Pi_1 dot Pi_2 | Pi_1 in B_i (u, v), Pi_2 in B_j (v, w)}$

*Пустой связкой $Omicron$* называется множество, не содержащее ни одного маршрута и не относится ни к одной паре вершин. $B dot Omicron = Omicron dot B = Omicron$

*Лемма (свойства операций над связками)*\
Пусть $u, v, w, t$ --- произвольные вершины орграфа. Для связок маршрутов в орграфе существуют следующие отношения:

+ $ B_i (u, v) union B_j (u, v) = B_j (u, v) union B_i (u, v)$
+ $B_i (u, v) union (B_j (u, v) union B_k (u, v)) = (B_i (u, v) union B_j (u, v)) union B_k (u, v)$
+ $B union Omicron = B$
+ $B_i (u, v) dot (B_j (v, w) dot B_k (w, t)) = (B_i (u, v) dot B_j (v, w)) dot B_k (w, t)$
+ $B_i (u, v) dot (B_j (v, w) union B_k (w, t)) = (B_i (u, v) dot B_j (u, w)) union ((B_i (u, v) dot B_k (v, w))$

Пусть дан $arrow(G)(V, rho), V = {v_1, ..., v_n}$. *Матрицей соединений* орграфа $arrow(G)$ будем обозначать матрицу $A$:
$ A = (a_(i j)), "где" a_(i j) = cases(
  v_i dot v_j ", " (v_i, v_j) in rho,
  0 ", " (v_i, v_j) in.not rho
) $
$A^k = (a_(i j)^((k)))$, где $a_(i j)^((k))$ --- связка маршрутов длины $k$ из $v_i$ в $v_j$

*Теорема (алгоритм поиска всех гамильтоновых путей в графе)* \
+ $A_1 = A, k = 1$, где $A$ --- матрица соединений
+ По матрице $A_k$ строим $overline(A_k)$, которая получается из $A_k$ применением к ней процедуры стандартного упрощения всех маршрутов в $A_k$ с последующим удалением всех цепей длины $< k$.\
  + Если $overline(A_k) = 0$ содержит только пустые связки, то гамильтоновых путей нет, конец алгоритма.\
  + Если $overline(A_k) != 0$ и $k = n - 1$, то $overline(a_(i j))^((k))$ содержит все гамильтоновы цепи из $v_i$  $v_j$
+ $A_(k + 1) = overline(A_k) dot overline(A_1)$\
  + Если $k = n - 1$, то конец алгоритма. Если хотя бы один элемент главной диагонали равен 0, то гамильтоновых контуров нет. Иначе любой элемент на главной диагонали содержит все гамильтоновы контуры орграфа.
  + Если $k != n - 1$, то $k = k + 1$ и переход к шагу 2. 